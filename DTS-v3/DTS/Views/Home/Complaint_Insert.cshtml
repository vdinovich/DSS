@model DTS.Models.Complaint

@{
    ViewBag.Title = "Complaint_Insert";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal"><h3 style="text-align:center;color:red">@ViewBag.Empty</h3>
    <h1 style="text-align:center;font-weight:bold;color:darkorange">Complaints - Entry Form</h1>
    <br /> <br />
    @Html.ActionLink("Show All Records", "Select_Complaints", "Select", "", new { id = "select" })
    <br /> <br />
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="form-group">
    @*<label class="control-label col-md-2">
                    Date Received dd-mm-yyyy
        </label>*@
    @Html.Label("Date Received dd-mth-yyyy:", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.DateReceived, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DateReceived, "", new { @class = "text-danger" })
    </div>
</div>

    <div class="form-group">
        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Location, ViewBag.locations[0] as SelectList, "", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Written Or Verbal
        </label>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.WritenOrVerbal, ViewBag.locations[4] as SelectList, "", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.WritenOrVerbal, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
           Received directly or from corporate?
        </label>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Receive_Directly, ViewBag.locations[5] as SelectList, "", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Receive_Directly, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            From:  Resident, Family, Visitor, Staff, Other
        </label>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.FromResident, ViewBag.locations[6] as SelectList, "", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.FromResident, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Resident's Full Name
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.ResidentName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ResidentName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
           Department
        </label>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Department, ViewBag.locations[7] as SelectList, "", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Brief description of complaint
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.BriefDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BriefDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Administration and Building
        </label>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsAdministration)
                @Html.ValidationMessageFor(model => model.IsAdministration, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Care and Services
        </label>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.CareServices)
                @Html.ValidationMessageFor(model => model.CareServices, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Palliative Care
        </label>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.PalliativeCare)
                @Html.ValidationMessageFor(model => model.PalliativeCare, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Dietary
        </label>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Dietary)
                @Html.ValidationMessageFor(model => model.Dietary, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Housekeeping
        </label>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Housekeeping)
                @Html.ValidationMessageFor(model => model.Housekeeping, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Laundry
        </label>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Laundry)
                @Html.ValidationMessageFor(model => model.Laundry, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Maintenance
        </label>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Maintenance)
                @Html.ValidationMessageFor(model => model.Maintenance, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Programs and Admissions
        </label>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Programs)
                @Html.ValidationMessageFor(model => model.Programs, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Physician
        </label>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Physician)
                @Html.ValidationMessageFor(model => model.Physician, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Beautician
        </label>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Beautician)
                @Html.ValidationMessageFor(model => model.Beautician, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Foot care
        </label>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.FootCare)
                @Html.ValidationMessageFor(model => model.FootCare, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Dental Care
        </label>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.DentalCare)
                @Html.ValidationMessageFor(model => model.DentalCare, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Physio
        </label>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Physio)
                @Html.ValidationMessageFor(model => model.Physio, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Other
        </label>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Other)
                @Html.ValidationMessageFor(model => model.Other, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            MOHLTC notified?
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.MOHLTCNotified, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MOHLTCNotified, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Copy to VP?
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.CopyToVP, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CopyToVP, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Response sent? (complainant & MOHLTC)
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.ResponseSent, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ResponseSent, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Action Taken
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.ActionToken, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ActionToken, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Rsolved
        </label>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Resolved, ViewBag.locations[8] as SelectList, "", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Resolved, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Ministry related visit?
        </label>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.MinistryVisit, ViewBag.locations[9] as SelectList, "", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MinistryVisit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add a New Record" class="btn btn-success" />
        </div>
    </div>
</div>
}


<div>
    @Html.ActionLink("Back to WOR Tabs", "WOR_Tabs", "Home", new { id = "back" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<style>
    #back {
        border: 2px solid blue;
        border-radius: 22px;
        position: absolute;
        padding: 11px;
        text-decoration: none;
        background-color: aqua;
        color: brown
    }

        #back:hover {
            text-decoration: none;
            background-color: black;
            color: white
        }

    #select {
        border: 2px solid darkorange;
        position: absolute;
        border-radius: 22px;
        padding: 7px;
        text-decoration: none;
        color: darkorange;
    }

        #select:hover {
            background-color: darkorange;
            color: white;
        }
</style>
