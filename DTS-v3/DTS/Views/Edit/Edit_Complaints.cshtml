@model DTS.Models.Complaint

@{
    ViewBag.Title = "Edit_Complaints";
}

<h1 style="text-align:center;font-weight:bold;color:darkorange"> Complaints - Edit Form</h1>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 style="text-align:center">Edit Complaints Id: @Html.DisplayFor(model => model.Id)</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <label class="control-label col-md-2">Date Received:&nbsp;</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateReceived, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateReceived, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Location:&nbsp;</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Location, ViewBag.locations[0] as SelectList, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Writen Or Verbal:&nbsp;</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.WritenOrVerbal, ViewBag.locations[1] as SelectList, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.WritenOrVerbal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Receive Directly:&nbsp;</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Receive_Directly, ViewBag.locations[2] as SelectList, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Receive_Directly, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">From Resident:&nbsp;</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.FromResident, ViewBag.locations[3] as SelectList, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FromResident, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Resident Name:&nbsp;</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ResidentName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ResidentName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Department :&nbsp; </label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Department, ViewBag.locations[4] as SelectList, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Brief Description:&nbsp; </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.BriefDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BriefDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Is Administration:&nbsp;</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsAdministration)
                    @Html.ValidationMessageFor(model => model.IsAdministration, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Care Services:&nbsp;</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CareServices)
                    @Html.ValidationMessageFor(model => model.CareServices, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Palliative Care:&nbsp;</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PalliativeCare)
                    @Html.ValidationMessageFor(model => model.PalliativeCare, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Dietary:&nbsp;</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Dietary)
                    @Html.ValidationMessageFor(model => model.Dietary, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Housekeeping:&nbsp;</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Housekeeping)
                    @Html.ValidationMessageFor(model => model.Housekeeping, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Laundry:&nbsp;</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Laundry)
                    @Html.ValidationMessageFor(model => model.Laundry, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Maintenance:&nbsp;</label>

            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Maintenance)
                    @Html.ValidationMessageFor(model => model.Maintenance, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Programs:&nbsp;</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Programs)
                    @Html.ValidationMessageFor(model => model.Programs, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Physician:&nbsp;</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Physician)
                    @Html.ValidationMessageFor(model => model.Physician, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Beautician:&nbsp;</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Beautician)
                    @Html.ValidationMessageFor(model => model.Beautician, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Foot Care:&nbsp;</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.FootCare)
                    @Html.ValidationMessageFor(model => model.FootCare, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Dental Care:&nbsp;</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.DentalCare)
                    @Html.ValidationMessageFor(model => model.DentalCare, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Physio:&nbsp;</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Physio)
                    @Html.ValidationMessageFor(model => model.Physio, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Other:&nbsp</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Other)
                    @Html.ValidationMessageFor(model => model.Other, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">MOHLTC Notified:&nbsp;</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.MOHLTCNotified, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MOHLTCNotified, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Copy To VP:&nbsp;</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CopyToVP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CopyToVP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Response Sent:&nbsp;</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ResponseSent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ResponseSent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Action Token:&nbsp;</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActionToken, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActionToken, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Resolved:&nbsp;</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Resolved, ViewBag.locations[5] as SelectList, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Resolved, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Ministry Visit:&nbsp;</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MinistryVisit, ViewBag.locations[6] as SelectList, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MinistryVisit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Back to List", "Select_Complaints", "Select", "", new { id = "backBtn" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



<style>
    #center {
        /*width: 500px;
            margin: auto;
        border: 1px silver solid;
        border-radius: 22px;*/
        padding: 27px;
    }

    #backBtn {
        border: 2px blue solid;
        border-radius: 22px;
        background-color: white;
        color: blue;
        padding: 15px;
        text-decoration: none;
    }

        #backBtn:hover {
            background-color: blue;
            color: white;
        }
</style>